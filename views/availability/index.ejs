<div class="content-header">
  <h1>Resource Availability</h1>
  <div class="content-header-actions">
    <button class="btn btn-primary" id="add-availability-btn">
      <svg class="icon" viewBox="0 0 24 24">
        <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"></path>
      </svg>
      Add Availability
    </button>
  </div>
</div>

<div class="card mb-4">
  <div class="card-header">
    <h2 class="card-title">Date Range</h2>
  </div>
  <div class="card-body">
    <form id="date-range-form" class="date-range-form">
      <div class="form-group">
        <label for="start-date">Start Date</label>
        <input type="date" id="start-date" name="startDate" class="form-control" value="<%= startDate %>">
      </div>
      <div class="form-group">
        <label for="end-date">End Date</label>
        <input type="date" id="end-date" name="endDate" class="form-control" value="<%= endDate %>">
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-primary">Apply</button>
      </div>
    </form>
  </div>
</div>

<div class="card">
  <div class="card-header">
    <h2 class="card-title">Team Availability</h2>
    <div class="card-actions">
      <a href="/availability/allocation" class="btn btn-sm btn-outline">View Allocation</a>
      <a href="/availability/my-availability" class="btn btn-sm btn-outline">My Availability</a>
    </div>
  </div>
  <div class="card-body">
    <div class="availability-calendar">
      <div class="availability-header">
        <div class="availability-team-member-header">Team Member</div>
        <div class="availability-dates">
          <%
            // Generate dates for the selected range
            const dates = [];
            const startDateObj = new Date(startDate);
            const endDateObj = new Date(endDate);
            const currentDate = new Date(startDateObj);

            while (currentDate <= endDateObj) {
              dates.push(new Date(currentDate));
              currentDate.setDate(currentDate.getDate() + 1);
            }
          %>

          <% dates.forEach(date => { %>
            <div class="availability-date <%= date.getDay() === 0 || date.getDay() === 6 ? 'weekend' : '' %>">
              <%= date.getDate() %>
              <span class="month"><%= date.toLocaleString('default', { month: 'short' }) %></span>
            </div>
          <% }); %>
        </div>
      </div>

      <div class="availability-body">
        <% userAvailability.forEach(ua => { %>
          <div class="availability-row">
            <div class="availability-team-member">
              <div class="user-info">
                <% if (ua.user.image) { %>
                  <img src="<%= ua.user.image %>" alt="<%= ua.user.displayName %>" class="user-avatar">
                <% } else { %>
                  <div class="user-avatar-placeholder">
                    <%= ua.user.firstName.charAt(0) %>
                  </div>
                <% } %>
                <a href="/availability/user/<%= ua.user._id %>"><%= ua.user.displayName %></a>
              </div>
            </div>
            <div class="availability-cells">
              <% dates.forEach(date => { %>
                <%
                  // Find availability record for this date
                  const dateStr = date.toISOString().split('T')[0];
                  const record = ua.records.find(r => {
                    const startDate = new Date(r.startDate).toISOString().split('T')[0];
                    const endDate = new Date(r.endDate).toISOString().split('T')[0];
                    return dateStr >= startDate && dateStr <= endDate;
                  });

                  let cellClass = 'availability-cell';
                  if (date.getDay() === 0 || date.getDay() === 6) {
                    cellClass += ' weekend';
                  }

                  if (record) {
                    cellClass += ` ${record.availabilityType.toLowerCase()}`;
                    if (record.reason !== 'Working Hours') {
                      cellClass += ` ${record.reason.toLowerCase().replace(' ', '-')}`;
                    }
                  } else {
                    cellClass += ' no-data';
                  }
                %>
                <div class="<%= cellClass %>"
                     data-date="<%= dateStr %>"
                     data-user="<%= ua.user._id %>"
                     <% if (record) { %>
                       data-record="<%= JSON.stringify({
                         id: record._id,
                         type: record.availabilityType,
                         reason: record.reason,
                         hours: record.hoursPerDay,
                         notes: record.notes
                       }) %>"
                     <% } %>
                >
                  <% if (record) { %>
                    <div class="availability-cell-content">
                      <% if (record.hoursPerDay > 0) { %>
                        <span class="hours"><%= record.hoursPerDay %>h</span>
                      <% } %>
                      <% if (record.reason !== 'Working Hours') { %>
                        <span class="reason"><%= record.reason %></span>
                      <% } %>
                    </div>
                  <% } %>
                </div>
              <% }); %>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  </div>
</div>

<!-- Add Availability Modal -->
<div class="modal" id="availability-modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3>Add Availability</h3>
      <button class="modal-close">&times;</button>
    </div>
    <div class="modal-body">
      <form action="/availability" method="POST" id="availability-form">
        <div class="form-group">
          <label for="user">Team Member</label>
          <select name="user" id="user" class="form-control" required>
            <option value="<%= user._id %>">Me (<%= user.displayName %>)</option>
            <% userAvailability.forEach(ua => { %>
              <% if (ua.user._id.toString() !== user._id.toString()) { %>
                <option value="<%= ua.user._id %>"><%= ua.user.displayName %></option>
              <% } %>
            <% }); %>
          </select>
        </div>

        <div class="form-group">
          <label for="startDate">Start Date</label>
          <input type="date" name="startDate" id="startDate" class="form-control" required>
        </div>

        <div class="form-group">
          <label for="endDate">End Date</label>
          <input type="date" name="endDate" id="endDate" class="form-control" required>
        </div>

        <div class="form-group">
          <label for="availabilityType">Availability Type</label>
          <select name="availabilityType" id="availabilityType" class="form-control" required>
            <option value="Available">Available</option>
            <option value="Unavailable">Unavailable</option>
            <option value="Limited">Limited</option>
          </select>
        </div>

        <div class="form-group">
          <label for="reason">Reason</label>
          <select name="reason" id="reason" class="form-control" required>
            <option value="Working Hours">Working Hours</option>
            <option value="Vacation">Vacation</option>
            <option value="Sick Leave">Sick Leave</option>
            <option value="Holiday">Holiday</option>
            <option value="Training">Training</option>
            <option value="Other">Other</option>
          </select>
        </div>

        <div class="form-group">
          <label for="hoursPerDay">Hours Per Day</label>
          <input type="number" name="hoursPerDay" id="hoursPerDay" class="form-control" min="0" max="24" value="8" required>
        </div>

        <div class="form-group">
          <label for="notes">Notes</label>
          <textarea name="notes" id="notes" class="form-control" rows="3"></textarea>
        </div>
      </form>
    </div>
    <div class="modal-footer">
      <button class="btn btn-secondary" id="cancel-availability">Cancel</button>
      <button class="btn btn-primary" id="save-availability">Save</button>
    </div>
  </div>
</div>

<!-- View/Edit Availability Modal -->
<div class="modal" id="view-availability-modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3>Availability Details</h3>
      <button class="modal-close">&times;</button>
    </div>
    <div class="modal-body">
      <div id="availability-details">
        <div class="availability-detail">
          <strong>Date:</strong> <span id="detail-date"></span>
        </div>
        <div class="availability-detail">
          <strong>Team Member:</strong> <span id="detail-user"></span>
        </div>
        <div class="availability-detail">
          <strong>Availability:</strong> <span id="detail-type"></span>
        </div>
        <div class="availability-detail">
          <strong>Reason:</strong> <span id="detail-reason"></span>
        </div>
        <div class="availability-detail">
          <strong>Hours:</strong> <span id="detail-hours"></span>
        </div>
        <div class="availability-detail">
          <strong>Notes:</strong> <span id="detail-notes"></span>
        </div>
      </div>

      <form action="/availability/update/" method="POST" id="edit-availability-form" style="display: none;">
        <input type="hidden" name="recordId" id="edit-record-id">

        <div class="form-group">
          <label for="edit-startDate">Start Date</label>
          <input type="date" name="startDate" id="edit-startDate" class="form-control" required>
        </div>

        <div class="form-group">
          <label for="edit-endDate">End Date</label>
          <input type="date" name="endDate" id="edit-endDate" class="form-control" required>
        </div>

        <div class="form-group">
          <label for="edit-availabilityType">Availability Type</label>
          <select name="availabilityType" id="edit-availabilityType" class="form-control" required>
            <option value="Available">Available</option>
            <option value="Unavailable">Unavailable</option>
            <option value="Limited">Limited</option>
          </select>
        </div>

        <div class="form-group">
          <label for="edit-reason">Reason</label>
          <select name="reason" id="edit-reason" class="form-control" required>
            <option value="Working Hours">Working Hours</option>
            <option value="Vacation">Vacation</option>
            <option value="Sick Leave">Sick Leave</option>
            <option value="Holiday">Holiday</option>
            <option value="Training">Training</option>
            <option value="Other">Other</option>
          </select>
        </div>

        <div class="form-group">
          <label for="edit-hoursPerDay">Hours Per Day</label>
          <input type="number" name="hoursPerDay" id="edit-hoursPerDay" class="form-control" min="0" max="24" required>
        </div>

        <div class="form-group">
          <label for="edit-notes">Notes</label>
          <textarea name="notes" id="edit-notes" class="form-control" rows="3"></textarea>
        </div>
      </form>
    </div>
    <div class="modal-footer">
      <div id="view-actions">
        <button class="btn btn-danger" id="delete-availability">Delete</button>
        <button class="btn btn-primary" id="edit-availability">Edit</button>
        <button class="btn btn-secondary" id="close-view">Close</button>
      </div>
      <div id="edit-actions" style="display: none;">
        <button class="btn btn-secondary" id="cancel-edit">Cancel</button>
        <button class="btn btn-primary" id="update-availability">Update</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Date range form
    const dateRangeForm = document.getElementById('date-range-form');

    dateRangeForm.addEventListener('submit', function(e) {
      e.preventDefault();
      const startDate = document.getElementById('start-date').value;
      const endDate = document.getElementById('end-date').value;

      window.location.href = `/availability?startDate=${startDate}&endDate=${endDate}`;
    });

    // Add availability modal
    const availabilityModal = document.getElementById('availability-modal');
    const addAvailabilityBtn = document.getElementById('add-availability-btn');
    const modalCloseButtons = document.querySelectorAll('.modal-close');
    const cancelAvailabilityBtn = document.getElementById('cancel-availability');
    const saveAvailabilityBtn = document.getElementById('save-availability');
    const availabilityForm = document.getElementById('availability-form');

    // View availability modal
    const viewAvailabilityModal = document.getElementById('view-availability-modal');
    const availabilityCells = document.querySelectorAll('.availability-cell:not(.no-data)');
    const closeViewBtn = document.getElementById('close-view');
    const editAvailabilityBtn = document.getElementById('edit-availability');
    const deleteAvailabilityBtn = document.getElementById('delete-availability');
    const cancelEditBtn = document.getElementById('cancel-edit');
    const updateAvailabilityBtn = document.getElementById('update-availability');
    const availabilityDetails = document.getElementById('availability-details');
    const editAvailabilityForm = document.getElementById('edit-availability-form');
    const viewActions = document.getElementById('view-actions');
    const editActions = document.getElementById('edit-actions');

    // Show add availability modal
    addAvailabilityBtn.addEventListener('click', function() {
      availabilityModal.style.display = 'block';

      // Set default dates
      const today = new Date();
      document.getElementById('startDate').value = today.toISOString().split('T')[0];
      document.getElementById('endDate').value = today.toISOString().split('T')[0];
    });

    // Close modals
    modalCloseButtons.forEach(function(button) {
      button.addEventListener('click', function() {
        availabilityModal.style.display = 'none';
        viewAvailabilityModal.style.display = 'none';
      });
    });

    // Cancel add availability
    cancelAvailabilityBtn.addEventListener('click', function() {
      availabilityModal.style.display = 'none';
    });

    // Save availability
    saveAvailabilityBtn.addEventListener('click', function() {
      if (availabilityForm.checkValidity()) {
        availabilityForm.submit();
      } else {
        availabilityForm.reportValidity();
      }
    });

    // Show availability details
    availabilityCells.forEach(function(cell) {
      cell.addEventListener('click', function() {
        const recordData = JSON.parse(cell.getAttribute('data-record'));
        const date = cell.getAttribute('data-date');
        const userId = cell.getAttribute('data-user');
        const userName = cell.closest('.availability-row').querySelector('.user-info a').textContent;

        // Populate details
        document.getElementById('detail-date').textContent = new Date(date).toLocaleDateString();
        document.getElementById('detail-user').textContent = userName;
        document.getElementById('detail-type').textContent = recordData.type;
        document.getElementById('detail-reason').textContent = recordData.reason;
        document.getElementById('detail-hours').textContent = `${recordData.hours} hours`;
        document.getElementById('detail-notes').textContent = recordData.notes || 'None';

        // Populate edit form
        document.getElementById('edit-record-id').value = recordData.id;

        // Get the full record dates from the server
        // For now, we'll just use the current date
        document.getElementById('edit-startDate').value = date;
        document.getElementById('edit-endDate').value = date;
        document.getElementById('edit-availabilityType').value = recordData.type;
        document.getElementById('edit-reason').value = recordData.reason;
        document.getElementById('edit-hoursPerDay').value = recordData.hours;
        document.getElementById('edit-notes').value = recordData.notes || '';

        // Show the modal
        viewAvailabilityModal.style.display = 'block';
        availabilityDetails.style.display = 'block';
        editAvailabilityForm.style.display = 'none';
        viewActions.style.display = 'flex';
        editActions.style.display = 'none';
      });
    });

    // Close view
    closeViewBtn.addEventListener('click', function() {
      viewAvailabilityModal.style.display = 'none';
    });

    // Edit availability
    editAvailabilityBtn.addEventListener('click', function() {
      availabilityDetails.style.display = 'none';
      editAvailabilityForm.style.display = 'block';
      viewActions.style.display = 'none';
      editActions.style.display = 'flex';
    });

    // Cancel edit
    cancelEditBtn.addEventListener('click', function() {
      availabilityDetails.style.display = 'block';
      editAvailabilityForm.style.display = 'none';
      viewActions.style.display = 'flex';
      editActions.style.display = 'none';
    });

    // Update availability
    updateAvailabilityBtn.addEventListener('click', function() {
      if (editAvailabilityForm.checkValidity()) {
        const recordId = document.getElementById('edit-record-id').value;
        editAvailabilityForm.action = `/availability/update/${recordId}`;
        editAvailabilityForm.submit();
      } else {
        editAvailabilityForm.reportValidity();
      }
    });

    // Delete availability
    deleteAvailabilityBtn.addEventListener('click', function() {
      if (confirm('Are you sure you want to delete this availability record?')) {
        const recordId = document.getElementById('edit-record-id').value;
        const deleteForm = document.createElement('form');
        deleteForm.method = 'POST';
        deleteForm.action = `/availability/delete/${recordId}`;
        document.body.appendChild(deleteForm);
        deleteForm.submit();
      }
    });
  });
</script>
