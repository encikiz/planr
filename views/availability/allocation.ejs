<div class="content-header">
  <h1>Resource Allocation</h1>
  <div class="content-header-actions">
    <a href="/availability" class="btn btn-secondary">
      <svg class="icon" viewBox="0 0 24 24">
        <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"></path>
      </svg>
      Back to Availability
    </a>
  </div>
</div>

<div class="card mb-4">
  <div class="card-header">
    <h2 class="card-title">Team Allocation Overview</h2>
  </div>
  <div class="card-body">
    <div class="chart-container">
      <canvas id="teamAllocationChart"></canvas>
    </div>
  </div>
</div>

<div class="card">
  <div class="card-header">
    <h2 class="card-title">Resource Allocation Details</h2>
  </div>
  <div class="card-body">
    <% if (userAllocation && userAllocation.length > 0) { %>
      <div class="table-responsive">
        <table class="table">
          <thead>
            <tr>
              <th>Team Member</th>
              <th>Projects</th>
              <th>Estimated Hours</th>
              <th>Allocated Days</th>
              <th>Utilization</th>
            </tr>
          </thead>
          <tbody>
            <% userAllocation.forEach(allocation => { %>
              <tr>
                <td>
                  <div class="user-info">
                    <% if (allocation.user.image) { %>
                      <img src="<%= allocation.user.image %>" alt="<%= allocation.user.displayName %>" class="user-avatar">
                    <% } else { %>
                      <div class="user-avatar-placeholder">
                        <%= allocation.user.firstName.charAt(0) %>
                      </div>
                    <% } %>
                    <a href="/availability/user/<%= allocation.user._id %>"><%= allocation.user.displayName %></a>
                  </div>
                </td>
                <td>
                  <% if (Object.keys(allocation.projects).length > 0) { %>
                    <div class="project-allocation-list">
                      <% Object.values(allocation.projects).forEach(project => { %>
                        <div class="project-allocation-item">
                          <div class="project-allocation-name">
                            <a href="/tasks/project/<%= project.project._id %>"><%= project.project.name %></a>
                          </div>
                          <div class="project-allocation-bar">
                            <div class="progress-bar">
                              <div class="progress-fill" style="width: <%= Math.min(100, (project.allocatedDays * 8 / allocation.user.defaultHoursPerDay) / (allocation.user.maxUtilizationPercentage / 100) * 100) %>%"></div>
                            </div>
                            <div class="project-allocation-stats">
                              <% if (project.estimatedHours > 0) { %>
                                <span><%= project.estimatedHours %>h</span>
                              <% } %>
                              <% if (project.allocatedDays > 0) { %>
                                <span><%= project.allocatedDays %> days</span>
                              <% } %>
                            </div>
                          </div>
                        </div>
                      <% }); %>
                    </div>
                  <% } else { %>
                    <span class="text-muted">No projects assigned</span>
                  <% } %>
                </td>
                <td><%= allocation.totalEstimatedHours %> hours</td>
                <td><%= allocation.totalAllocatedDays %> days</td>
                <td>
                  <% 
                    const maxHours = allocation.user.defaultHoursPerDay * allocation.user.maxUtilizationPercentage / 100;
                    const utilization = allocation.totalAllocatedDays > 0 ? 
                      (allocation.totalEstimatedHours / (allocation.totalAllocatedDays * maxHours) * 100) : 0;
                  %>
                  <div class="utilization-indicator">
                    <div class="utilization-bar">
                      <div class="utilization-fill <%= utilization > 100 ? 'overallocated' : '' %>" style="width: <%= Math.min(100, utilization) %>%"></div>
                    </div>
                    <span class="utilization-percentage <%= utilization > 100 ? 'overallocated' : '' %>">
                      <%= Math.round(utilization) %>%
                    </span>
                  </div>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    <% } else { %>
      <div class="empty-state">
        <svg class="empty-state-icon" viewBox="0 0 24 24">
          <path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"></path>
        </svg>
        <p>No resource allocation data found.</p>
      </div>
    <% } %>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Prepare data for chart
    const userAllocation = <%- JSON.stringify(userAllocation || []) %>;
    
    if (userAllocation.length > 0) {
      const ctx = document.getElementById('teamAllocationChart').getContext('2d');
      
      // Extract data for chart
      const labels = userAllocation.map(ua => ua.user.displayName);
      const allocatedDays = userAllocation.map(ua => ua.totalAllocatedDays);
      const estimatedHours = userAllocation.map(ua => ua.totalEstimatedHours);
      
      // Create chart
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [
            {
              label: 'Allocated Days',
              data: allocatedDays,
              backgroundColor: '#4285F4',
              borderColor: '#3367D6',
              borderWidth: 1,
              yAxisID: 'y'
            },
            {
              label: 'Estimated Hours',
              data: estimatedHours,
              backgroundColor: '#EA4335',
              borderColor: '#C62828',
              borderWidth: 1,
              yAxisID: 'y1'
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Days'
              },
              position: 'left'
            },
            y1: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Hours'
              },
              position: 'right',
              grid: {
                drawOnChartArea: false
              }
            }
          }
        }
      });
    }
  });
</script>
